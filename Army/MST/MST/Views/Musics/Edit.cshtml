@model MST.Models.Music

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Musics", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Music</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.msMusicID)

    <div class="form-group">
        @Html.LabelFor(model => model.msABID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("msABID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.msABID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.msMusicName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.msMusicName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.msMusicName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.msLyrics, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.TextArea("msLyrics", "", new { @class = "form-control" })
            @*@Html.EditorFor(model => model.msLyrics, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.msLyrics, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.msAuthorID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("msAuthorID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.msAuthorID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.msMelodyID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("msMelodyID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.msMelodyID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.msBandID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("msBandID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.msBandID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.msMStyleID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("msMStyleID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.msMStyleID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.msMusicUpload, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-offset-3 col-md-10">
            @if (Model.msMusicUpload != null)
            {
                <img src="@Url.Content(Model.msMusicUpload)" width="100" class="audi-rounded">
            }
            <br />
        </div>
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.FileUpload, new { htmlAttributes = new { @class = "form-control" }, @type = "file" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.FileUpload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.FileUpload, new { htmlAttributes = new { @class = "form-control" }, type = "file" })
                @Html.ValidationMessageFor(model => model.FileUpload, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Indexl")
</div>
